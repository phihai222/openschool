@use "sass:meta";
@use "sass:map";

// Define map of breakpoints
$breakpoints: (
        "phone": "(max-width: 480px)",
        "tab-port": "(min-width: 481px) and (max-width: 768px)",
        "tab-land": "(min-width: 769px) and (max-width: 1280px)",
        "desktop": "(min-width: 1281px) and (max-width: 1919px)",
        "big-desktop": "(min-width: 1920px)"
);

// Enhanced respond mixin
@mixin respond($keys) {
  @if meta.type-of($keys) == "string" or meta.type-of($keys) == "identifier" {
    // Single breakpoint
    @if map.has-key($breakpoints, $keys) {
      $query: map.get($breakpoints, $keys);
      @media #{$query} {
        @content;
      }
    } @else {
      @warn "Unknown breakpoint: `#{$keys}`.";
    }
  } @else if meta.type-of($keys) == "list" {
    // Multiple breakpoints
    @each $key in $keys {
      @if map.has-key($breakpoints, $key) {
        $query: map.get($breakpoints, $key);
        @media #{$query} {
          @content;
        }
      } @else {
        @warn "Unknown breakpoint in list: `#{$key}`.";
      }
    }
  } @else {
    @warn "Invalid breakpoint type: `#{$keys}`. Use string or list of strings.";
  }
}

// Example usage:
.example {
  font-size: 16px;

  @include respond("phone") {
    font-size: 12px;
  }

  @include respond("tab-port") {
    font-size: 14px;
  }

  @include respond("tab-land") {
    font-size: 15px;
  }

  @include respond("big-desktop") {
    font-size: 18px;
  }
}
